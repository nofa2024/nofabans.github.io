# ASM for PythonVM v0.1

---

## register and number
1. 寄存器使用一字节长度记录。其中前2位为标记符号，在泛类型指令中作为寄存器的标记符号，通常为11;再2位是类型符号，其中，01为`通用寄存器`，10为`指针寄存器`，11为`段寄存器`，00特指`旗标寄存器`.
2. 寄存器不能与数混为一谈，数作为数据使用，在指令中一般用地址表示。
3. 寄存器强要求用32位数写入。
4. 数在编写时强要求使用16进制，因此无需在数后添加h后缀。
6. 没有字符型数据，使用ASCII码表示。
### register
1. 通用寄存器:常用的寄存器，除了esp和ebp其他的寄存器都可以自由写入。
> eax,ebx,ecx,edx,edi,esi,esp,ebp
1.1. eax和edx常用于io 21命令，将eax前16位作为命令指示、后16位作为类型指示，edx代表io参数
> eax前十六位的最后两位：
> 00 程序终止 01 停机 02 读硬盘簇 03 写硬盘簇 04 读版本号 05 输出字符串 06 输出特定类型 07 输入字符 08 硬盘复位
> 00:无参数 01:edx代表返回值 02:edx前十六位代表簇的首地址 03:edx同02 04:edx前十六位代表大版本号，后十六位代表小版本号
  05:edx前八位代表起始地址，再八位代表末尾地址 06:类型指示参考type节，edx同05 07:edx前八位代表起始地址 08:无参数
1.2. esp和edp分别代表栈段的顶地址与底地址
2. 指针寄存器:用于指示代码段的起始地址和末尾地址，前八位为起始地址，后八位为结束地址
> eds,ess,ecs
2.0. 在汇编完成后将eds,ess,ecs的地址都放在机器码文件的前三号上，用于帮助机器寻找段
2.1. eds表示数据(堆)段的地址
2.2. ess表示栈段的地址
2.3. ecs表示程序段的地址
3. 旗标寄存器:用于标识数据信息和符号，禁止自由写入，仅通过指令修改
